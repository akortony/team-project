{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Student\\\\MyNewDApp\\\\frontend\\\\src\\\\components\\\\DoctorRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getEthereumContract } from \"../utils/web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorRegistration = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    specialization: \"\",\n    email: \"\",\n    username: \"\",\n    doctorId: \"\",\n    licenseNumber: \"\",\n    yearsOfExperience: \"\",\n    clinicName: \"\",\n    contactNumber: \"\",\n    addressDetails: \"\"\n  });\n  const [message, setMessage] = useState(\"\"); // State to store success/error messages\n  const [messageType, setMessageType] = useState(\"\"); // \"success\" or \"error\"\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  /*const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const contract = await getEthereumContract();\r\n      if (!contract) return alert(\"Smart contract not found\");\r\n  \r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const doctorAddress = accounts[0];\r\n        console.log(doctorAddress);\r\n  \r\n      // Attempt to register the doctor\r\n      const tx = await contract.registerDoctor(\r\n        doctorAddress,\r\n        formData.name,\r\n        formData.specialization,\r\n        formData.email,\r\n        formData.username,\r\n        formData.doctorId,\r\n        formData.licenseNumber,\r\n        parseInt(formData.yearsOfExperience),\r\n        formData.clinicName,\r\n        formData.contactNumber,\r\n        formData.addressDetails\r\n      );\r\n  \r\n      // Wait for the transaction to be mined and get the receipt\r\n      const receipt = await tx.wait();\r\n        // Check if the transaction was successful and emitted the event\r\n      if (receipt.status === 1) {\r\n        alert(\"Doctor registered successfully!\");\r\n      } else {\r\n        alert(\"Transaction failed!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n        // Check for specific revert error messages from the smart contract\r\n      if (error.message.includes(\"Doctor already registered\")) {\r\n        alert(\"The doctor is already registered.\");\r\n      } else if (error.message.includes(\"Username already taken\")) {\r\n        alert(\"The username is already taken. Please choose a different one.\");\r\n      } else if (error.message.includes(\"Doctor ID already exists\")) {\r\n        alert(\"The Doctor ID is already registered. Please use a unique Doctor ID.\");\r\n      } else {\r\n        // Default error message for other errors\r\n        alert(\"Error registering doctor: \" + error.message);\r\n      }\r\n    }\r\n  };*/\n\n  /*const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const contract = await getEthereumContract();\r\n      if (!contract) return alert(\"Smart contract not found\");\r\n  \r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const doctorAddress = accounts[0];\r\n  \r\n      console.log(doctorAddress);\r\n  \r\n      // Register doctor in the smart contract\r\n      const tx = await contract.registerDoctor(\r\n        doctorAddress,\r\n        formData.name,\r\n        formData.specialization,\r\n        formData.email,\r\n        formData.username,\r\n        formData.doctorId,\r\n        formData.licenseNumber,\r\n        parseInt(formData.yearsOfExperience),\r\n        formData.clinicName,\r\n        formData.contactNumber,\r\n        formData.addressDetails\r\n      );\r\n  \r\n      await tx.wait();\r\n  \r\n      // Send doctor details to backend for MySQL insertion\r\n      const response = await fetch(\"http://localhost:8081/register-doctor\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          doctorAddress,\r\n          ...formData\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.success) {\r\n        alert(\"Doctor registered successfully!\");\r\n      } else {\r\n        alert(\"Error registering doctor in database: \" + data.message);\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error registering doctor: \" + error.message);\r\n    }\r\n  };*/\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const contract = await getEthereumContract();\n      if (!contract) return alert(\"Smart contract not found\");\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const doctorAddress = accounts[0];\n      console.log(doctorAddress);\n      const response = await fetch(\"http://localhost:8081/register-doctor\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          doctorAddress,\n          ...formData\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Doctor registered successfully!\"); // Set success message\n        setMessageType(\"success\");\n      } else {\n        setMessage(data.message || \"Failed to register doctor\"); // Set error message\n        setMessageType(\"error\");\n      }\n    } catch (error) {\n      console.error(\"Error registering doctor:\", error);\n      setMessage(\"Error registering doctor. Please try again.\"); // Set error message\n      setMessageType(\"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundImage: \"url('/images/1.jfif')\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        maxWidth: \"600px\",\n        padding: \"20px\",\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"24px\",\n          marginBottom: \"20px\",\n          color: \"#F44336\"\n        },\n        children: \"Doctor Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: messageType === \"success\" ? \"green\" : \"red\",\n          fontWeight: \"bold\",\n          marginBottom: \"10px\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"specialization\",\n          placeholder: \"Specialization\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"doctorId\",\n          placeholder: \"Doctor ID\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"licenseNumber\",\n          placeholder: \"License Number\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"yearsOfExperience\",\n          placeholder: \"Years of Experience\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"clinicName\",\n          placeholder: \"Clinic Name\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"contactNumber\",\n          placeholder: \"Contact Number\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"addressDetails\",\n          placeholder: \"Address\",\n          onChange: handleChange,\n          required: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: \"12px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#4CAF50\",\n            color: \"#fff\",\n            border: \"none\",\n            cursor: \"pointer\",\n            fontSize: \"16px\",\n            transition: \"background-color 0.3s\"\n          },\n          onMouseOver: e => e.target.style.backgroundColor = \"#45a049\",\n          onMouseOut: e => e.target.style.backgroundColor = \"#4CAF50\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorRegistration, \"RiWZ/4dxZh32J1iBCDmNPQvshTs=\");\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["React","useState","getEthereumContract","jsxDEV","_jsxDEV","DoctorRegistration","_s","formData","setFormData","name","specialization","email","username","doctorId","licenseNumber","yearsOfExperience","clinicName","contactNumber","addressDetails","message","setMessage","messageType","setMessageType","handleChange","e","target","value","handleSubmit","preventDefault","contract","alert","accounts","window","ethereum","request","method","doctorAddress","console","log","response","fetch","headers","body","JSON","stringify","data","json","ok","error","style","width","height","backgroundImage","backgroundSize","backgroundPosition","display","justifyContent","alignItems","padding","children","maxWidth","backgroundColor","borderRadius","boxShadow","textAlign","fontSize","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","onSubmit","flexDirection","gap","type","placeholder","onChange","required","border","cursor","transition","onMouseOver","onMouseOut","_c","$RefreshReg$"],"sources":["C:/Users/Student/MyNewDApp/frontend/src/components/DoctorRegistration.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getEthereumContract } from \"../utils/web3\";\r\n\r\n\r\nconst DoctorRegistration = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    specialization: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    doctorId: \"\",\r\n    licenseNumber: \"\",\r\n    yearsOfExperience: \"\",\r\n    clinicName: \"\",\r\n    contactNumber: \"\",\r\n    addressDetails: \"\",\r\n  });\r\n\r\n  const [message, setMessage] = useState(\"\"); // State to store success/error messages\r\n  const [messageType, setMessageType] = useState(\"\"); // \"success\" or \"error\"\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /*const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const contract = await getEthereumContract();\r\n      if (!contract) return alert(\"Smart contract not found\");\r\n  \r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const doctorAddress = accounts[0];\r\n\r\n      console.log(doctorAddress);\r\n  \r\n      // Attempt to register the doctor\r\n      const tx = await contract.registerDoctor(\r\n        doctorAddress,\r\n        formData.name,\r\n        formData.specialization,\r\n        formData.email,\r\n        formData.username,\r\n        formData.doctorId,\r\n        formData.licenseNumber,\r\n        parseInt(formData.yearsOfExperience),\r\n        formData.clinicName,\r\n        formData.contactNumber,\r\n        formData.addressDetails\r\n      );\r\n  \r\n      // Wait for the transaction to be mined and get the receipt\r\n      const receipt = await tx.wait();\r\n\r\n      // Check if the transaction was successful and emitted the event\r\n      if (receipt.status === 1) {\r\n        alert(\"Doctor registered successfully!\");\r\n      } else {\r\n        alert(\"Transaction failed!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n\r\n      // Check for specific revert error messages from the smart contract\r\n      if (error.message.includes(\"Doctor already registered\")) {\r\n        alert(\"The doctor is already registered.\");\r\n      } else if (error.message.includes(\"Username already taken\")) {\r\n        alert(\"The username is already taken. Please choose a different one.\");\r\n      } else if (error.message.includes(\"Doctor ID already exists\")) {\r\n        alert(\"The Doctor ID is already registered. Please use a unique Doctor ID.\");\r\n      } else {\r\n        // Default error message for other errors\r\n        alert(\"Error registering doctor: \" + error.message);\r\n      }\r\n    }\r\n  };*/\r\n\r\n  /*const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const contract = await getEthereumContract();\r\n      if (!contract) return alert(\"Smart contract not found\");\r\n  \r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const doctorAddress = accounts[0];\r\n  \r\n      console.log(doctorAddress);\r\n  \r\n      // Register doctor in the smart contract\r\n      const tx = await contract.registerDoctor(\r\n        doctorAddress,\r\n        formData.name,\r\n        formData.specialization,\r\n        formData.email,\r\n        formData.username,\r\n        formData.doctorId,\r\n        formData.licenseNumber,\r\n        parseInt(formData.yearsOfExperience),\r\n        formData.clinicName,\r\n        formData.contactNumber,\r\n        formData.addressDetails\r\n      );\r\n  \r\n      await tx.wait();\r\n  \r\n      // Send doctor details to backend for MySQL insertion\r\n      const response = await fetch(\"http://localhost:8081/register-doctor\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          doctorAddress,\r\n          ...formData\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.success) {\r\n        alert(\"Doctor registered successfully!\");\r\n      } else {\r\n        alert(\"Error registering doctor in database: \" + data.message);\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Error registering doctor: \" + error.message);\r\n    }\r\n  };*/\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n        const contract = await getEthereumContract();\r\n        if (!contract) return alert(\"Smart contract not found\");\r\n\r\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const doctorAddress = accounts[0];\r\n\r\n        console.log(doctorAddress);\r\n\r\n        const response = await fetch(\"http://localhost:8081/register-doctor\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                doctorAddress,\r\n                ...formData\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n            setMessage(\"Doctor registered successfully!\"); // Set success message\r\n            setMessageType(\"success\");\r\n        } else {\r\n            setMessage(data.message || \"Failed to register doctor\"); // Set error message\r\n            setMessageType(\"error\");\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"Error registering doctor:\", error);\r\n        setMessage(\"Error registering doctor. Please try again.\"); // Set error message\r\n        setMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        backgroundImage: \"url('/images/1.jfif')\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"600px\",\r\n          padding: \"20px\",\r\n          backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n        }}\r\n      >\r\n        <h2 style={{ textAlign: \"center\", fontSize: \"24px\", marginBottom: \"20px\", color: \"#F44336\" }}>\r\n          Doctor Registration\r\n        </h2>\r\n        {message && (\r\n          <div style={{ \r\n            color: messageType === \"success\" ? \"green\" : \"red\", \r\n            fontWeight: \"bold\", \r\n            marginBottom: \"10px\" \r\n          }}>\r\n            {message}\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"specialization\"\r\n            placeholder=\"Specialization\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"doctorId\"\r\n            placeholder=\"Doctor ID\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"licenseNumber\"\r\n            placeholder=\"License Number\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"yearsOfExperience\"\r\n            placeholder=\"Years of Experience\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"clinicName\"\r\n            placeholder=\"Clinic Name\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"contactNumber\"\r\n            placeholder=\"Contact Number\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"addressDetails\"\r\n            placeholder=\"Address\"\r\n            onChange={handleChange}\r\n            required\r\n            style={{\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              padding: \"12px\",\r\n              borderRadius: \"4px\",\r\n              backgroundColor: \"#4CAF50\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"16px\",\r\n              transition: \"background-color 0.3s\",\r\n            }}\r\n            onMouseOver={(e) => e.target.style.backgroundColor = \"#45a049\"}\r\n            onMouseOut={(e) => e.target.style.backgroundColor = \"#4CAF50\"}\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRegistration;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,cAAc,EAAE,EAAE;IAClBC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IAC1BhB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACiB,CAAC,CAACC,MAAM,CAAChB,IAAI,GAAGe,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC/D,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM3B,mBAAmB,CAAC,CAAC;MAC5C,IAAI,CAAC2B,QAAQ,EAAE,OAAOC,KAAK,CAAC,0BAA0B,CAAC;MAEvD,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjF,MAAMC,aAAa,GAAGL,QAAQ,CAAC,CAAC,CAAC;MAEjCM,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;MAE1B,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAClEL,MAAM,EAAE,MAAM;QACdM,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBR,aAAa;UACb,GAAG7B;QACP,CAAC;MACL,CAAC,CAAC;MAEF,MAAMsC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACb3B,UAAU,CAAC,iCAAiC,CAAC,CAAC,CAAC;QAC/CE,cAAc,CAAC,SAAS,CAAC;MAC7B,CAAC,MAAM;QACHF,UAAU,CAACyB,IAAI,CAAC1B,OAAO,IAAI,2BAA2B,CAAC,CAAC,CAAC;QACzDG,cAAc,CAAC,OAAO,CAAC;MAC3B;IAEJ,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACZX,OAAO,CAACW,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD5B,UAAU,CAAC,6CAA6C,CAAC,CAAC,CAAC;MAC3DE,cAAc,CAAC,OAAO,CAAC;IAC3B;EACF,CAAC;EAGD,oBACElB,OAAA;IACE6C,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,OAAO;MACfC,eAAe,EAAE,uBAAuB;MACxCC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,QAAQ;MAC5BC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,eAEFvD,OAAA;MACE6C,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbU,QAAQ,EAAE,OAAO;QACjBF,OAAO,EAAE,MAAM;QACfG,eAAe,EAAE,0BAA0B;QAC3CC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE;MACb,CAAE;MAAAJ,QAAA,gBAEFvD,OAAA;QAAI6C,KAAK,EAAE;UAAEe,SAAS,EAAE,QAAQ;UAAEC,QAAQ,EAAE,MAAM;UAAEC,YAAY,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAR,QAAA,EAAC;MAE9F;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJpD,OAAO,iBACNf,OAAA;QAAK6C,KAAK,EAAE;UACVkB,KAAK,EAAE9C,WAAW,KAAK,SAAS,GAAG,OAAO,GAAG,KAAK;UAClDmD,UAAU,EAAE,MAAM;UAClBN,YAAY,EAAE;QAChB,CAAE;QAAAP,QAAA,EACCxC;MAAO;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN,eACDnE,OAAA;QAAMqE,QAAQ,EAAE9C,YAAa;QAACsB,KAAK,EAAE;UAAEM,OAAO,EAAE,MAAM;UAAEmB,aAAa,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAhB,QAAA,gBAC7FvD,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,MAAM;UACXoE,WAAW,EAAC,MAAM;UAClBC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,gBAAgB;UACrBoE,WAAW,EAAC,gBAAgB;UAC5BC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,OAAO;UACZnE,IAAI,EAAC,OAAO;UACZoE,WAAW,EAAC,OAAO;UACnBC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,UAAU;UACfoE,WAAW,EAAC,UAAU;UACtBC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,UAAU;UACfoE,WAAW,EAAC,WAAW;UACvBC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,eAAe;UACpBoE,WAAW,EAAC,gBAAgB;UAC5BC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,QAAQ;UACbnE,IAAI,EAAC,mBAAmB;UACxBoE,WAAW,EAAC,qBAAqB;UACjCC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,YAAY;UACjBoE,WAAW,EAAC,aAAa;UACzBC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,eAAe;UACpBoE,WAAW,EAAC,gBAAgB;UAC5BC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,MAAM;UACXnE,IAAI,EAAC,gBAAgB;UACrBoE,WAAW,EAAC,SAAS;UACrBC,QAAQ,EAAEvD,YAAa;UACvBwD,QAAQ;UACR9B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBkB,MAAM,EAAE,gBAAgB;YACxBnB,eAAe,EAAE;UACnB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFnE,OAAA;UACEwE,IAAI,EAAC,QAAQ;UACb3B,KAAK,EAAE;YACLS,OAAO,EAAE,MAAM;YACfI,YAAY,EAAE,KAAK;YACnBD,eAAe,EAAE,SAAS;YAC1BM,KAAK,EAAE,MAAM;YACba,MAAM,EAAE,MAAM;YACdC,MAAM,EAAE,SAAS;YACjBhB,QAAQ,EAAE,MAAM;YAChBiB,UAAU,EAAE;UACd,CAAE;UACFC,WAAW,EAAG3D,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACwB,KAAK,CAACY,eAAe,GAAG,SAAU;UAC/DuB,UAAU,EAAG5D,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACwB,KAAK,CAACY,eAAe,GAAG,SAAU;UAAAF,QAAA,EAC/D;QAED;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjE,EAAA,CApWID,kBAAkB;AAAAgF,EAAA,GAAlBhF,kBAAkB;AAsWxB,eAAeA,kBAAkB;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}